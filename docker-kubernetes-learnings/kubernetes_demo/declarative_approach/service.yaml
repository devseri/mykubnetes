# what service should have - the deployment which it want to expose, the port of pod and  port at which
# application is running
# pl refer https://kubernetes.io/docs/reference/kubernetes-api/service-resources/service-v1/

apiVersion: v1
# k8 artifacts
kind: Service
# its own name
metadata:
  name: backend
# deployment specs
spec:
  # select pods with lable app: second-app (pods may have multiple labels)
  # the pods in our case is having second label tier: backend
  # the pods can also be placed say with label tier: another-backend
  # so selecting just app: second-app is targetting all the tiers in which this app can be placed
  selector:
    app: second-app
  # ports specs
  ports:
    # IP protocol
    - protocol: "TCP"
      # port that will be exposed by this service
      port: 80
      # port number to access on the pods targeted by the service (mapped to application)
      targetPort: 3000
      # to allow traffic inside kinD cluster
      nodePort: 30010
  # type of service
  type: NodePort

  # kubectl create -f deployment.yaml
  # try to access curl http://localhost:30010 -> Not accessible
  # kubectl apply -f service.yaml
  # curl http://localhost:30010
  # can also be accessed by node ip
  # kubectl get nodes -o wide
  # curl http://<worker_node_ip>:30010
  # kubectl delete -f deployment.yaml
  # kubectl delete -f service.yaml